######################################################### -*- python -*-
# Cut and paste this line to import your macro after editing:
#
#     %run -i '{folder}/macro.py'
#
# Verify that your macro was loaded correctly:
#
#     sample_sequence??
#
# Then run the macro:
#
#     RE(sample_sequence())
#                /
############### / #######################################
#              / 
#             /  Note that you are defining a command
#            /   that gets run in BlueSky
#           V
def sample_sequence():
    '''User-defined macro for running a sequence of motor motions and
    XAFS measurements
    '''
    (ok, text) = BMM_clear_to_start()
    if ok is False:
        print(error_msg('\n'+text) + bold_msg('Quitting macro....\n'))
        return(yield from null())
    
    BMMuser.macro_dryrun = False
    BMMuser.prompt = False
    BMM_log_info('Beginning sample macro')
    def main_plan():

        ### ---------------------------------------------------------------------------------------
        ### BOILERPLATE ABOVE THIS LINE -----------------------------------------------------------
        ##  EDIT BELOW THIS LINE
        #<--indentation matters!
    
        ## sample 1
        yield from xafs('scan.ini', filename='samp1', sample='first sample')
        close_last_plot()                 # this command closes the plot on screen
    
        ## sample 2
        yield from mvr(xafs_wheel, -15)
        yield from xafs('scan.ini', filename='samp2', sample='another sample', comment='my comment')
        close_last_plot()

        ## sample 3
        yield from mvr(xafs_wheel, -15)
        yield from xafs('scan.ini', filename='samp3', sample='a different sample', prep='this sample prep', nscans=4)
        close_last_plot()

        
        ##  EDIT ABOVE THIS LINE
        ### BOILERPLATE BELOW THIS LINE -----------------------------------------------------------
        ### ---------------------------------------------------------------------------------------

    def cleanup_plan():
        yield from end_of_macro()
        
    yield from bluesky.preprocessors.finalize_wrapper(main_plan(), cleanup_plan())    
    yield from end_of_macro()
    BMM_log_info('Sample macro finished!')
